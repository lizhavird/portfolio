/* Generated by Opal 1.0.3 */
(function(Opal) {
    var $a, $b, self = Opal.top, $nesting = [], nil = Opal.nil, $$$ = Opal.const_get_qualified, $$ = Opal.const_get_relative, $breaker = Opal.breaker, $slice = Opal.slice, $truthy = Opal.truthy, $klass = Opal.klass, $send = Opal.send, answer1 = nil, answer2 = nil;
  
    Opal.add_stubs(['$puts', '$chomp', '$gets', '$==', '$each_char', '$sleep', '$print']);
    
    self.$puts("hi! i'm liz (well...not really, but liz made me!). together we are ready to make something beautiful for you. what are you looking for today? ");
    answer1 = self.$gets().$chomp();
    self.$puts("" + "\n" + "    .\n" + "    .    |    ,\n" + "        '   /\n" + "      ` ,-. '\n" + "   --- (   ) ---\n" + "         /\n" + "       _|=|_\n" + "      |_____| ");
    self.$puts("brilliant! we would love to hear more about your idea. would you like to send liz an email regarding your inquiry?");
    answer2 = self.$gets().$chomp();
    if ($truthy(($truthy($a = ($truthy($b = answer2['$==']("yes")) ? $b : answer2['$==']("ya"))) ? $a : answer2['$==']("yup")))) {
      self.$puts("perfect! if you navigate to the contact page above us, you can find her email address.")
    } else {
      self.$puts("ok! well i hope to see you again soon.")
    };
    return (function($base, $super, $parent_nesting) {
      var self = $klass($base, $super, 'String');
  
      var $nesting = [self].concat($parent_nesting), $String_slow$1;
  
      return (Opal.def(self, '$slow', $String_slow$1 = function $$slow() {
        var $$2, self = this;
  
        return $send(self, 'each_char', [], ($$2 = function(c){var self = $$2.$$s || this;
  
        
          
          if (c == null) {
            c = nil;
          };
          self.$sleep(0.1);
          return self.$print(c);}, $$2.$$s = self, $$2.$$arity = 1, $$2))
      }, $String_slow$1.$$arity = 0), nil) && 'slow'
    })($nesting[0], null, $nesting);
  })(Opal);
  